name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "17"
          registry-url: "https://registry.npmjs.org"
      - name: Compile
        run: npm ci
      - name: Test
        run: npm run test
      - name: Extract release notes
        # Get the release notes for the version by printing all lines between lines
        # starting with the version header and ending with the next version header,
        # inclusive. We then drop the last line to remove the subsequent version header.
        run: |
          version=$(npm pkg get version | sed 's/"//g')
          sed -n "/## v$version/,/## v/p" ../CHANGELOG.md | head -n -1 > ${{ github.workspace }}/release-notes.txt
      - name: Release
        # See https://github.com/softprops/action-gh-release#-external-release-notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}/release-notes.txt
      - name: Publish
        # See https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages#publishing-packages-to-the-npm-registry
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deno-compile:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          [
            { target: "x86_64-unknown-linux-gnu", suffix: "-linux-amd64" },
            { target: "aarch64-apple-darwin", suffix: "-darwin-arm64" },
            { target: "x86_64-pc-windows-msvc", suffix: "-pc-amd64.exe" },
          ]
    defaults:
      run:
        working-directory: ./quint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Compile with Deno
        run: |
          deno compile \
            --target ${{ matrix.config.target }} \
            --output quint-${{ matrix.config.suffix }} \
            --allow-all \
            "npm:@informalsystems/quint@${{ github.ref_name }}"

      - name: Generate SHA256 Hash
        run: |
          sha256sum quint-${{ matrix.config.suffix }} > quint-${{ matrix.config.suffix }}.sha256

      - name: Upload Assets to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" \
            "quint-${{ matrix.config.suffix }}" \
            "quint-${{ matrix.config.suffix }}.sha256" \
            --repo "${{ github.repository }}" \
            --clobber
